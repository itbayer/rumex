<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="generator" content="pandoc">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
  <meta name="author" content="Stefan Blechschmidt">
  <title>HTML, PDF, epub, odt und mobi mit pandocs markdown unter Rumex erstellen</title>
  <style type="text/css">code{white-space: pre;}</style>
  <!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
  <![endif]-->
  <style type="text/css">
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code > span.kw { color: #007020; font-weight: bold; }
code > span.dt { color: #902000; }
code > span.dv { color: #40a070; }
code > span.bn { color: #40a070; }
code > span.fl { color: #40a070; }
code > span.ch { color: #4070a0; }
code > span.st { color: #4070a0; }
code > span.co { color: #60a0b0; font-style: italic; }
code > span.ot { color: #007020; }
code > span.al { color: #ff0000; font-weight: bold; }
code > span.fu { color: #06287e; }
code > span.er { color: #ff0000; font-weight: bold; }
  </style>
  <link rel="stylesheet" href="../rxtpl/css/statik.css">
</head>
<body>
<header>
<h1 class="title">HTML, PDF, epub, odt und mobi mit pandocs markdown unter Rumex erstellen</h1>
<h2 class="author">Stefan Blechschmidt</h2>
<h3 class="date">2013, 2014</h3>
</header>
<p>Rumex verwendet pandocs markdown weil man damit sehr einfach und schnell Text erstellen und in verschiedenen Formate wandeln kann. Für die Erstellung von Denkschriften<a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a> wurde zusätzlich eine, ich nenne sie <em>statik Funktion</em> eingebaut. Mit dieser Funktion ist es möglich innerhalb eines Unterverzeichnisses verschiedenen Ausgabe Formate zu erstellen. Zur Zeit werden, von Rumex, folgenden Formate unterstützt:</p>
<ul>
<li>.html</li>
<li>.pdf</li>
<li>.odt OpenDokument</li>
<li>.epub E-Book</li>
<li>.mobi E-Book (Kindle)</li>
</ul>
<p>Erstellt werden die einzelnen Formate über <a href="#rumex-kurztasten">Funktionstasten</a> die innerhalb (g)vim<a href="#fn2" class="footnoteRef" id="fnref2"><sup>2</sup></a> zur Verfügung stehen.<br /><del>Eine Besonderheit ist dass die <code>.htm</code> Datei auch ohne die zusätzlichen Dateien wie</del> <del>Bilder oder die CSS Datei funktionieren. Alle Daten werden in die <code>.htm</code> Datei eingebunden.</del><a href="#fn3" class="footnoteRef" id="fnref3"><sup>3</sup></a><br />Auch wurde die <a href="#litfunk">Literaturfunktion</a> von Pandoc eingebaut sodass Verweise auf anderen Quellen in den Denkschriften verwendet werden können.</p>
<p>Wer sich Rumex nicht installieren möchte aber dennoch eine einfache Möglichkeit sucht HTML Seiten zu erstellen, kann sich einmal <a href="http://www.it-bayer.de/cirsium">cirsium</a> anschauen. Cirsium ist eine Auskopplung aus Rumex, unterteilt aber die Quelltextdatei in verschiedene Abschnitte. Am besten einfach mal auf <a href="http://www.github.com/itbayer/cirsium">github.com</a> anschauen.</p>
<h1 id="rumex-kurztasten">Die (g)vim statik Kurztaste in Rumex</h1>
<p>Ab der Rumex Version 0.8.2 sind die Funktionstasten in Rumex enthalten. Folgende F-Tasten wurden belegt.</p>
<dl>
<dt>F5</dt>
<dd><p>Erstellt die <code>.htm</code> Datei ohne Inhaltsverzeichnis.</p>
</dd>
<dt>Shift+F5</dt>
<dd><p>Erstellt die <code>.htm</code> Datei mit Inhaltsverzeichnis bin zur Ebene 3.</p>
</dd>
<dt>Alt+F5</dt>
<dd><p>Erstellt die <code>.htm</code> Datei mit kompletten Inhaltsverzeichnis bzw. bis Ebene 5 da LaTeX auch nicht mehr Ebenen unterstützt und die beiden Ausgabe Format annähernd identisch sein sollten.</p>
</dd>
<dt>Ctrl+F5</dt>
<dd><p>Öffnet die <code>.htm</code> Datei.</p>
</dd>
<dt>F6</dt>
<dd><p>Erstellt die <code>.pdf</code> Datei ohne Inhaltsverzeichnis.</p>
</dd>
<dt>Shift+F6</dt>
<dd><p>Erstellt die <code>.pdf</code> Datei mit Inhaltsverzeichnis bis zur Ebene 3.</p>
</dd>
<dt>Alt+F6</dt>
<dd><p>Erstellt die <code>.pdf</code> Datei mit kompletten Inhaltsverzeichnis. Hier ist anzumerken dass LaTeX nur Inhaltsverzeichnisse bis zur Ebene 5 unterstützt. Das HTML Format wurde entsprechend angepasst, siehe oben.</p>
</dd>
<dt>Ctrl+F6</dt>
<dd><p>Öffnet die <code>.pdf</code> Datei. Zur Zeit wird nur zathura unterstützt.</p>
</dd>
<dt>F7</dt>
<dd><p>Erstellt die restlichen Formate, <code>.epub</code>, <code>.odt</code> und <code>.mobi</code>. Voraussetzung für das <code>.mobi</code> Format ist <code>calibre</code>.</p>
</dd>
<dt>Ctrl-F7</dt>
<dd><p>Öffnet die Literatur Verwaltung <code>rumex.bib</code>. Voraussetzung, <code>jabref</code> ist installiert.</p>
</dd>
</dl>
<h1 id="html-formatierung">HTML Formatierung</h1>
<p>Die erzeugte HTML Datei besitzt Standardmäßig keine Formatierung bzw. verwendet die Standard Darstellung des Browsers.</p>
<p>Kopf- und Fusszeile werden dadurch nicht, vom restlichen Text, unterschieden. Auch das Inhaltsverzeichnis ist im ersten Moment als solches nicht gleich zu erkennen. Dieses kann mit ein wenig CSS geändert werden. Diese CSS Datei ist ab Rumex Version 0.8.2 enthalten muss aber unter Umständen noch eingerichtet werden.</p>
<pre><code>cd .rx
ln -s ../.rumex/default/statik.css statik.css</code></pre>
<h1 id="litfunk">Die Literaturverzeichnis Funktion</h1>
<p>Bei lesen des Artikels <em>&quot;PDF-Dokumente schreiben mit Pandoc und Markdown&quot; <span class="citation" data-cites="stenderprolinux">(<span style="font-variant: small-caps;">Stender</span>, 2013)</span></em> ist mir die Idee gekommen die Rumex <em>statik Funktion</em> mit einem Literaturverzeichnis, die ja auch in pandoc zur Verfügung steht, zu versehen.</p>
<h4 id="nachteil-des-literaturverzeichnisses">Nachteil des Literaturverzeichnisses</h4>
<p>Das Literaturverzeichnis wird immer gesetzt, auch dann wenn es nicht verwendet wird. Bedingt durch die CSS Formatierung</p>
<pre class="sourceCode css"><code class="sourceCode css"><span class="fl">.references</span><span class="dv">:before</span> <span class="kw">{</span>
    <span class="kw">content:</span> <span class="st">&quot;Literaturverzeichnis&quot;</span><span class="kw">;</span></code></pre>
<p>wird somit die Überschrift <em>Literaturverzeichnis</em> immer angezeigt.</p>
<h2 id="installation">Installation</h2>
<p>Für die Verwendung der Literaturfunktion muss pandoc um das Zusatzprogramm <code>pandoc-citeproc</code> erweitert werden. Wer Pandoc über die Paketverwaltung installiert hat braucht hier nichts zu machen. Wer Pandoc manuell, so wie ich, installiert hat muss dieses Programm nachinstallieren.</p>
<p>Dazu erweitert man die Installationszeile um das neue Programm</p>
<pre><code>cabal update
cabal install pandoc pandoc-citeproc</code></pre>
<p>Zu guter Letzt erstellt man noch die symbolischen Links der beiden Programme.</p>
<pre><code>sudo ln -s /home/USER/.cabal/bin/pandoc /usr/local/bin/.
sudo ln -s /home/USER/.cabal/bin/pandoc-citeproc /usr/local/bin/.</code></pre>
<p><strong>Nachtrag:</strong> Bei dieser Beschreibung war ich auf dem Holzweg wie man in diesem <a href="http://it-bayer.de/pandoc/weblog.html#pandoc11233aufdebian74">weblog Eintrag</a> lesen kann.</p>
<h3 id="nachinstallation-rumex">Nachinstallation Rumex</h3>
<p>Wer Rumex schon im Einsatz hat muss für die Erweiterung ein wenig Hand anlegen. Zu erste holt man sich die neue Version<a href="#fn4" class="footnoteRef" id="fnref4"><sup>4</sup></a> von rumex.</p>
<p>Dann braucht man noch drei zusätzliche Dateien im Verzeichnis <code>.rx</code>.</p>
<ul>
<li><code>rumex.bib</code></li>
<li><code>rumex.csl</code></li>
<li><code>statik.css</code></li>
</ul>
<p>Wobei der <a href="#literatur-stil">Literatur Vorlage Stiel</a> und die CSS Datei nur verlinkt wird. In der <code>rumex.bib</code> werden dann die Literatur Verweise verwaltet.</p>
<pre><code>cd .rx
touch rumex.bib
ln -s ../.rumex/default/din-1505-2.csl rumex.csl
ln -s ../.rumex/default/statik.css statik.css</code></pre>
<h3 id="literatur-stil">Literatur Stil</h3>
<p>Als Literatur Stil kommt <code>din-1505-2.csl</code> zum Einsatz. Andere Stile findet man im git Repository <a href="https://github.com/citation-style-language/styles.git">https://github.com/citation-style-language/styles.git</a>. Als Name für die Stil Vorlage wurde <code>rumex.csl</code> gewählt damit mit eine Änderung des Stils einfach über den Symlink gemacht werden kann.</p>
<h3 id="literatur-verwaltung">Literatur Verwaltung</h3>
<p>Für die Verwaltung der Literatur Datenbank verwende ich <a href="http://jabref.sourceforge.net/">Jabref</a>.</p>
<pre><code>sudo apt-get install jabref</code></pre>
<p>Der Aufruf des Programms wurde auch auf einen F Taste gelegt. Wer eine anderes Programm verwenden will muss diesen entsprechend anpassen.</p>
<h3 id="tipps">Tipps</h3>
<ul>
<li><p>Auf <span class="citation" data-cites="wiki:bibtex">Wikipedia (2013)</span> findet man eine schöne Beschreibung über die Literatur Verwaltung mit BibTex.</p></li>
<li><p>Die BibTex Einträge muss man sich unter Umständen nicht einmal selber erstellen. Da verschiedene Seiten entsprechende Dienste anbieten. Gelungen finde ich die Seite von <a href="http://www.literatur-generator.de/">http://www.literatur-generator.de/</a> aber auch auf <a href="http://lead.to/amazon/en/?op=bt">http://lead.to/amazon/en/?op=bt</a> findet man BibTeX Einträge. Zwar muss man diese unter Umständen noch ein wenig überarbeiten aber das Grund Gerüst wird einem sozusagen frei Haus geliefert.<br />Wer einen Wikipedia Artikel zitieren dem wird unter <code>&quot;Werkzeuge -&gt; Seite zitieren&quot;</code> weiter geholfen.</p></li>
<li><p>Für das zitieren von Internetseiten verwende ich folgende Formate. Beide erzeugen dabei den Eintrag der auf dieser Seite im Literaturverzeichnis zu finden ist.</p></li>
</ul>
<pre><code>    @ELECTRONIC{ wiki:bibtex,
        author = &quot;Wikipedia&quot;,
        title = &quot;BibTeX --- Wikipedia{,} Die freie Enzyklopädie&quot;,
        year = &quot;2013&quot;,
        url = &quot;http://de.wikipedia.org/w/index.php?title=BibTeX&amp;oldid=124228120&quot;, 
        note = &quot;[Online; Stand 18. Dezember 2013]&quot;
    }</code></pre>
<blockquote>
...oder
<div style="padding-left:5em; font-size: .7em; color: blue; width: 60%;">
<strong>Achtung:</strong> Dieses Format wird von jabref nicht unterstützt und gegen ein anders ausgetauscht. Bei dem Einsatz von Jabref am besten ELECTRONIC verwenden.
</div>
</blockquote>
<pre><code>    @WWW{ wiki:bibtex,
        author = &quot;Wikipedia&quot;,
        title = &quot;BibTeX --- Wikipedia{,} Die freie Enzyklopädie&quot;,
        year = &quot;2013&quot;,
        url = &quot;http://de.wikipedia.org/w/index.php?title=BibTeX&amp;oldid=124228120&quot;, 
        note = &quot;[Online; Stand 18. Dezember 2013]&quot;
    }</code></pre>
<h1 id="verwendung-in--und-außerhalb-von-rumex">Verwendung in- und außerhalb von Rumex?</h1>
<p>Innerhalb von Rumex erstellt man in einem separatem Unterverzeichnis die entsprechende markdown Datei und dann kann es auch schon los gehen.</p>
<p>Außerhalb von Rumex kann man diese Funktion natürlich auch verwenden. Mit Außerhalb meine ich Denkschriften die nicht veröffentlicht werden. Dazu gibt es zwei Möglichkeiten.</p>
<ol type="1">
<li><p>Die Datei bzw. das Verzeichnis in <code>.gitignore</code> hinterlegen. Somit wird diese nicht verwaltet und auch nicht, bei einem <code>make online</code>, hoch geladen.</p></li>
<li><p>Eine zweite lokale Rumex Installation die nur für Denkschriften verwendet wird.</p></li>
<li><p>...und dann wäre da noch <a href="https://github.com/itbayer/cirsium">Cirsium</a>, eine Auskopplung aus Rumex, mit der man einfache html und pdf Seiten erstellen kann. Die Literaturverzeichnisoption ist auch enthalten. Die Formate odt, epub und mobi sind jedoch nicht eingebaut.</p></li>
</ol>
<h2 id="einbinden-von-bildern">Einbinden von Bildern</h2>
<p>Bei dem Einbinden der Bilder muss man beachten dass die Erstellung der statik Datei vom Verzeichnis <code>.rx</code> ausgeht.</p>
<p>Will man also ein Bild, dass im Ordner der Statik Datei liegt einbinden so muss auch auf das Bild aus der Sicht des <code>.rx</code> Verzeichnisses eingebunden werden.</p>
<p>Beispiel:</p>
<p>Das Bild liegt im Ordner <code>statik</code> somit müsste der Markdown Befehl so aussehen.</p>
<pre><code>![Beispielbild](../statik/beispiel.png)</code></pre>
<p>In Rumex kann man diese Funktion natürlich auch verwenden. Am besten erstellt man sich dazu ein eigenes Unterverzeichnis und dort die Datei <code>index.md</code> mit den Texten.</p>
<h2 id="statik-dateien-im-.rx-verzeichnis">Statik Dateien im <code>.rx</code> Verzeichnis</h2>
<p>Es wird sicher passieren dass man die Funktionstasten der Statik Seiten auch bei der Bearbeitung der eigentlichen Rumex Dateien drückt. Durch entsprechende Einträge in der <code>.gitignore</code> Datei werden solche Dateien von einem Upload ausgeschlossen. Mit den Aufruf von <code>make statikclean</code> können die erstellten statik Dateien Schlussendliche aus dem <code>.rx</code> Verzeichnis entfernt werden. Dieser Befehl wird auch bei <code>make clean</code> ausgeführt.</p>
<h2 id="tipps-1">Tipps</h2>
<p>Das PDF Programm <code>zathura</code> hat die Eigenschaft dass wenn sich die Datei ändert diese automatisch nachgeladen wird. Eine schöne Funktion wenn man seinen Text, an dem man gerade arbeitet, immer wieder einmal im Ausgabe Format betrachten will. Einfach die Taste F6 drücken, die Datei wird auch gleich gespeichert, und mit ALT-TAB das Programm Fenster wechseln.</p>
<p>Bei Format HTML geht das natürlich auch. Nur muss hier eine Erweiterung installiert werden. Für die Browser Chromium und Firefox habe ich mit <code>Auto Refresh Plus</code><span class="math"><em></em><sup><em>C</em><em>h</em><em>r</em><em>o</em><em>m</em><em>i</em><em>u</em><em>m</em></sup></span> bzw. <code>Tab Auto Reload</code><span class="math"><em></em><sup><em>F</em><em>i</em><em>r</em><em>e</em><em>F</em><em>o</em><em>x</em></sup></span> gute Erfahrungen gemacht.</p>
<hr />
<p>Die PDF Datei dieser Beschreibung kann man sich <a href="index.pdf">hier</a> ansehen. Die Markdown Quelldatei kann man sich <a href="index.md">hier</a> holen.</p>
<hr />
<div class="references">
<p><span style="font-variant: small-caps;">Stender, Daniel</span>: <em>PDF-Dokumente schreiben mit Pandoc und Markdown</em>. URL <a href="http://www.pro-linux.de/artikel/2/1635/3,bibliographie.html">http://www.pro-linux.de/artikel/2/1635/3,bibliographie.html</a></p>
<p><span style="font-variant: small-caps;">Wikipedia</span>: <em>BibTeX — Wikipedia, Die freie Enzyklopädie</em>. URL <a href="http://de.wikipedia.org/w/index.php?title=BibTeX&amp;oldid=124228120">http://de.wikipedia.org/w/index.php?title=BibTeX&amp;oldid=124228120</a>. — [Online; Stand 18. Dezember 2013]</p>
</div>
<section class="footnotes">
<hr />
<ol>
<li id="fn1"><p>Im Neudeutschen würde man die Denkschrift als Memorandum bezeichnen.<a href="#fnref1">↩</a></p></li>
<li id="fn2"><p>Die Funktionstasten sind im gvim Rumex Menü nicht eingebaut. Man sollte sie sich also merken :-).<a href="#fnref2">↩</a></p></li>
<li id="fn3"><p>Diese Eigenschaft wurde wieder entfernt da eine Datei mit sehr vielen Bildern oder gar Videos, die alle in die HTML Datei eingebunden werden, sehr groß wird. Dieses erhöht die Ladezeit der HTM Datei. Bei der Verwaltung durch git wirkt sich diese Eigenschaft auch ungünstig aus.<a href="#fnref3">↩</a></p></li>
<li id="fn4"><p>Die Literatur Erweiterung ist ab der Rumex Version 0.8.2 enthalten.<a href="#fnref4">↩</a></p></li>
</ol>
</section>
</body>
</html>
