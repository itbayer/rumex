<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="generator" content="pandoc">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
  <meta name="author" content="Stefan Blechschmidt">
  <title>HTML und PDF Dateine mit pandoc und gvim erstellen</title>
  <style type="text/css">code{white-space: pre;}</style>
  <!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
  <![endif]-->
  <style type="text/css">
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code > span.kw { color: #007020; font-weight: bold; }
code > span.dt { color: #902000; }
code > span.dv { color: #40a070; }
code > span.bn { color: #40a070; }
code > span.fl { color: #40a070; }
code > span.ch { color: #4070a0; }
code > span.st { color: #4070a0; }
code > span.co { color: #60a0b0; font-style: italic; }
code > span.ot { color: #007020; }
code > span.al { color: #ff0000; font-weight: bold; }
code > span.fu { color: #06287e; }
code > span.er { color: #ff0000; font-weight: bold; }
  </style>
  <link href="data:text/css,%2F%2A%20gvim%5Ff8%2Ecss%20%2A%2F%0A%0Aheader%20%7B%0A%09text%2Dalign%3A%20center%3B%0A%09border%2Dbottom%3A%201px%20solid%20silver%3B%0A%7D%0A%0Anav%23TOC%20%7B%0A%09border%2Dbottom%3A%201px%20solid%20silver%3B%0A%09font%2Dsize%3A%200%2E8em%3B%0A%7D%20%0A%0A%0Asection%2Efootnotes%20%7B%0A%09color%3A%20gray%3B%0A%09font%2Dsize%3A%200%2E8em%3B%0A%09margin%2Dtop%3A%204em%3B%0A%7D%0A%0Asection%2Efootnotes%20hr%20%7B%0A%09border%3A%20none%3B%0A%09border%2Dtop%3A%201px%20solid%20silver%3B%0A%09margin%2Dleft%3A%200%3B%0A%09width%3A%2040%25%3B%0A%7D%0A%0A%2F%2A%20%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%0A%20%20%20%20Umformatieren%20der%20%C3%9Cberschriften%20%0A%20%20%20%20%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%20%2A%2F%0A%0A%2F%2A%20Ab%20der%20zweiten%20h1%20%C3%9Cberschrift%20bekommt%20diese%0A%20%20%20%20einen%20gr%C3%B6%C3%9Feren%20Abstand%2E%0A%2A%2F%0A%0Ah1%3Anth%2Dof%2Dtype%28n%2B2%29%20%7B%0A%20%20%20%20margin%2Dtop%3A%204em%3B%0A%7D%0A%0A%2F%2A%20Der%20Link%20der%20%C3%9Cberschriften%20sollte%20%0A%20%20%20%20nicht%20unterstrichen%20%0A%20%20%20%20und%20in%20schwarz%20dargestellt%20werden%2E%20%20%2A%2F%0Ah1%20a%2C%0Ah2%20a%2C%0Ah3%20a%2C%0Ah4%20a%2C%0Ah5%20a%2C%0Ah6%20a%20%7B%0A%20%20%20%20text%2Ddecoration%3A%20none%3B%0A%20%20%20%20color%3A%20%23000%3B%0A%7D%0A" rel="stylesheet">
</head>
<body>
<header>
<h1 class="title">HTML und PDF Dateine mit pandoc und gvim erstellen</h1>
<h2 class="author">Stefan Blechschmidt</h2>
<h3 class="date">Oktober 2013</h3>
</header>
<nav id="TOC">
<ul>
<li><a href="#vorwort">Vorwort</a></li>
<li><a href="#ausgabeformate-erstellen">Ausgabeformate erstellen</a></li>
<li><a href="#die-gvim-kurztaste">Die Gvim Kurztaste</a></li>
<li><a href="#formatierung-erweitern">Formatierung erweitern</a></li>
<li><a href="#rumex">Rumex?</a><ul>
<li><a href="#warum-.htm-verwendet-wird">Warum <code>.htm</code> verwendet wird</a></li>
<li><a href="#htm-dateien-im-.rx-verzeichnis-aufräumen"><code>.htm</code> Dateien im <code>.rx</code> Verzeichnis aufräumen</a></li>
</ul></li>
</ul>
</nav>
<h1 id="vorwort"><a href="#vorwort">Vorwort</a></h1>
<p>Rumex verwendet pandocs markdown weil man damit sehr einfach und schnell Text erstellen und verschiedenen Formate wandeln kann. Diese Funktion kann man aber auch außerhalb vom Rumex, also für die alltäglichen Beschreibungen und Notizen die so anfallen, verwenden.</p>
<p>Abgesehen habe ich es bei dieser Beschreibung auf die beiden Formate <code>PDF</code><sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup> und <code>HTML</code>.</p>
<h1 id="ausgabeformate-erstellen"><a href="#ausgabeformate-erstellen">Ausgabeformate erstellen</a></h1>
<p>Um die unterschiedlichen Ausgabeformate mittels pandoc zu erstellen braucht man einige Optionen die auf der <a href="http://johnmacfarlane.net/pandoc/README.html">Homepage von pandoc</a> sehr gut beschrieben sind.</p>
<p>Um den aktuellen Text nach HTML zu wandeln kann dieser Befehl verwendet werden.</p>
<pre><code>pandoc -f markdown -t html5 --toc -s -o test.html test.md</code></pre>
<p>Für PDF funktioniert dieser Befehl</p>
<pre><code>pandoc -f markdown -t latex --toc -V lang=ngermanb -o test.pdf test.md</code></pre>
<p>Dabei ist der Parameter <code>--toc</code> für die Anzeige des Inhaltsverzeichnis zuständig.</p>
<p>Da diese beiden Formate innerhalb des Editors gvim zur Verfügung stehen sollten brauchte es noch die Definition der gvim Kurztasten.</p>
<h1 id="die-gvim-kurztaste"><a href="#die-gvim-kurztaste">Die Gvim Kurztaste</a></h1>
<p>Die Unterstützung soll nur für gvim aber auch ausserhalb Rumex funktionieren darum werden die benötigten Befehle in die Datei <code>~/.gvimrc</code> geschrieben.</p>
<p>Verwendet werden, in diesem Beispiel, die Tasten F8 und F9.<br />F8 für HTML und F9 für das PDF Format.<br />Ausserdem werden noch die zwei Tasten ALT-F8 und ALT-F9 für die Anzeige konfiguriert wobei zathura<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> für die PDF Anzeige verwendet wird.</p>
<p>Nachfolgende Zeilen in die <code>~/.gvimrc</code> Datei kopieren und fertig ist diese Anpassung.</p>
<pre><code>&quot; HTML Datei erstellen
map &lt;F8&gt; :w&lt;cr&gt;:!pandoc -f markdown -t html5 --toc -s -o &lt;C-R&gt;=expand(&quot;%:r&quot;)&lt;CR&gt;.htm %&lt;CR&gt;&lt;CR&gt;
&quot; HTML Datei anzeigen
map &lt;A-F8&gt; :!x-www-browser &lt;C-R&gt;=expand(&quot;%:r&quot;)&lt;CR&gt;.htm&amp;&lt;CR&gt;&lt;CR&gt;


&quot; PDF Datei erstellen
map &lt;F9&gt; :w&lt;cr&gt;:!pandoc -f markdown -t latex --toc -V lang=ngermanb -o &lt;C-R&gt;=expand(&quot;%:r&quot;)&lt;CR&gt;.pdf %&lt;CR&gt;&lt;CR&gt;
&quot; PDF Datei anzeigen
map &lt;A-F9&gt; :!zathura &lt;C-R&gt;=expand(&quot;%:r&quot;)&lt;CR&gt;.pdf&amp;&lt;CR&gt;&lt;CR&gt;</code></pre>
<h1 id="formatierung-erweitern"><a href="#formatierung-erweitern">Formatierung erweitern</a></h1>
<p>Die erzeugte HTML Datei besitzt keine Formatierung bzw. verwendet die Standard Darstellung des Browsers.</p>
<p>Kopf- und Fusszeile werden dadurch nicht, vom restlichen Text, unterschieden. Auch das Inhaltsverzeichnis ist im ersten Moment als solches nicht gleich zu erkennen. Dieses kann mit ein wenig CSS geändert werden.</p>
<pre class="sourceCode css"><code class="sourceCode css"><span class="co">/* gvim_f8.css */</span>

header <span class="kw">{</span>
    <span class="kw">text-align:</span> <span class="dt">center</span><span class="kw">;</span>
    <span class="kw">border-bottom:</span> <span class="dt">1px</span> <span class="dt">solid</span> <span class="dt">silver</span><span class="kw">;</span>
<span class="kw">}</span>

nav<span class="fl">#TOC</span> <span class="kw">{</span>
    <span class="kw">border-bottom:</span> <span class="dt">1px</span> <span class="dt">solid</span> <span class="dt">silver</span><span class="kw">;</span>
    <span class="kw">font-size:</span> <span class="dt">0.8em</span><span class="kw">;</span>
<span class="kw">}</span> 

section<span class="fl">.footnotes</span> <span class="kw">{</span>
    <span class="kw">color:</span> <span class="dt">gray</span><span class="kw">;</span>
    <span class="kw">font-size:</span> <span class="dt">0.8em</span><span class="kw">;</span>
    <span class="kw">margin-top:</span> <span class="dt">4em</span><span class="kw">;</span>
<span class="kw">}</span>

section<span class="fl">.footnotes</span> hr <span class="kw">{</span>
    <span class="kw">border:</span> <span class="dt">none</span><span class="kw">;</span>
    <span class="kw">border-top:</span> <span class="dt">1px</span> <span class="dt">solid</span> <span class="dt">silver</span><span class="kw">;</span>
    <span class="kw">margin-left:</span> <span class="dt">0</span><span class="kw">;</span>
    <span class="kw">width:</span> <span class="dt">40%</span><span class="kw">;</span>
<span class="kw">}</span>


<span class="co">/* ----------------------------------</span>
<span class="co">    Umformatieren der Überschriften </span>
<span class="co">    -------------------------------- */</span>

<span class="co">/* Ab der zweiten h1 Überschrift bekommt diese</span>
<span class="co">    einen größeren Abstand. */</span>

h1<span class="dv">:nth-of-type</span>(n+2) <span class="kw">{</span>
    <span class="kw">margin-top:</span> <span class="dt">4em</span><span class="kw">;</span>
<span class="kw">}</span>

<span class="co">/* Der Link der Überschriften sollte </span>
<span class="co">    nicht unterstrichen </span>
<span class="co">    und in schwarz dargestellt werden. */</span>
h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a <span class="kw">{</span>
    <span class="kw">text-decoration:</span> <span class="dt">none</span><span class="kw">;</span>
    <span class="kw">color:</span> <span class="dt">#000</span><span class="kw">;</span>
<span class="kw">}</span></code></pre>
<p>Gespeichert wird diese Datei in einem separaten Unterverzeichnis. Ich verwende dazu <code>~/.pandoc</code>.</p>
<p>Die Zeilen für die HTML Erstellung, in der Datei <code>~/.gvimrc</code>, ändert sich dadurch ein wenig. Es sind die Optionen <code>--self-contained</code> und <code>--css ~/.pandoc/gvim_f8.css</code> hinzu gekommen.</p>
<pre><code>&quot; HTML Datei erstellen
map &lt;F8&gt; :w&lt;cr&gt;:!pandoc -f markdown -t html5 --toc --self-contained --css ~/.pandoc/gvim_f8.css -s -o &lt;C-R&gt;=expand(&quot;%:r&quot;)&lt;CR&gt;.htm %&lt;CR&gt;&lt;CR&gt;</code></pre>
<p><strong>Anmerkung zu den neuen Parametern</strong></p>
<dl>
<dt><code>--self-contained</code></dt>
<dd><p>Durch diesen Parameter wird die CSS Datei in den HTML Quellcode eingebunden. Funktioniert übrigens auch mit Bildern. Es muss also nur die HTML Datei hoch geladen werden.</p>
</dd>
<dt><code>--css</code></dt>
<dd><p>Die CSS Formatierungsdatei. Da die Datei mittels <code>--self-contained</code> in die HTML Datei eingebunden wird muss diese nicht auf dem Server mit hoch geladen werden.</p>
</dd>
</dl>
<h1 id="rumex"><a href="#rumex">Rumex?</a></h1>
<p>In Rumex kann man diese Funktion natürlich auch verwenden. Am besten erstellt man sich dazu ein eigenes Unterverzeichnis und dort die Datei <code>index.md</code> mit den Texten.</p>
<h2 id="warum-.htm-verwendet-wird"><a href="#warum-.htm-verwendet-wird">Warum <code>.htm</code> verwendet wird</a></h2>
<p>Um nicht mit der git Verwaltung, innerhalb Rumex / Unterverzeichnis <code>.rx</code>, in Konflikt zu kommen wurde für die HTML Dateien, die per F8 erstellt werden, die Endung <code>.htm</code> verwendet. Durch einen Eintrag in der Datei <code>.gitignore</code> können diese so von der git Verwaltung ausgenommen werden.</p>
<pre><code>.rx/*.htm
.rx/*.pdf</code></pre>
<p>Zwar werden diese Dateien im lokalen Arbeitsverzeichnis gespeichert aber nicht über den Befehl <code>make online</code> hoch geladen.</p>
<h2 id="htm-dateien-im-.rx-verzeichnis-aufräumen"><a href="#htm-dateien-im-.rx-verzeichnis-aufräumen"><code>.htm</code> Dateien im <code>.rx</code> Verzeichnis aufräumen</a></h2>
<p>Um die evtl. angefallenen <code>.htm</code> Dateien, die sich im <code>.rx</code> Verzeichnis befinden, löschen zu können gibt es auch einen entsprechenden make Befehl unter Rumex. Mit</p>
<pre><code>make f8clean</code></pre>
<p>werden alle <code>.htm</code> Dateien im <code>.rx</code> Verzeichnis gelöscht. Dieser Befehl wurde auch in</p>
<pre><code>make clean</code></pre>
<p>aufgenommen.</p>
<hr />
<p>Die PDF Datei dieser Beschreibung kann man sich <a href="index.pdf">hier</a> ansehen. Die Markdown Quelldatei kann man sich <a href="index.md">hier</a> holen.</p>
<hr />
<section class="footnotes">
<hr />
<ol>
<li id="fn1"><p>Für die Umwandlung nach PDF muss jedoch LaTeX mit den entsprechenden Paketen auf dem Rechner installiert sein. Außerdem wird für die Darstellung der PDF Dateien das Programm zathura verwendet, was natürlich auch installiert sein sollte.<a href="#fnref1">↩</a></p></li>
<li id="fn2"><p>Zathura wurde deshalb gewählt weil dieses Programm ähnlich wie vi über die Tastatur bedient werden kann.<a href="#fnref2">↩</a></p></li>
</ol>
</section>
</body>
</html>
