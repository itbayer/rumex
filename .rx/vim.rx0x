% vim
%
%


<!--

[vim](vim.html)
=======================================================

-->

Um die Texte in Rumex zu schreiben verwende ich vim.
Vim ist meiner Ansicht ein super Editor.
Darum gibt es für Rumex auch gleich drei Erweiterungen

1. rumex-gvim 
2. rumex-vim
3. rumex-tilda

Was mit vim noch alles möglich ist findet man auf dieser Seite.

<!-- schnipp -->

# Rumex Tipps

## Rumex Tila oder Rumex vim

Beim verwenden der Rumex Tilda Erweiterung sollte man 
den Befehl `make show` mit der Erweiterung `&`
also `make show&` starten
das sonst die vim Konsole nicht freigegeben wird.

# Erweiterungen

Für vim (gvim) gibt es ein paar nützliche Erweiterungen.

## vifm.vim

Eine interessante Erweiterung ist vifm.vim.
Mit der Erweiterung wird der Browser `vifm` in vim eingebunden.
Natürlich muss `vifm` installiert sein.

	sudo apt-get install vifm

Die Erweiterung findet man auf github.com, <https://github.com/istib/vifm.vim>.

Nach der Installation und dem Neustart vom vim stehen 5 neue Befehle zur Verfügung.

EditVifm 
:	Öffnet die ausgewählte Datei im aktuellen Fenster

SplitVifm
:	Teilt das aktuelle Fenster und öffnet darin die ausgewählte Datei.

VsplitVifm
:	Teilt das aktuelle Fenster vertikal und öffnet darin die ausgewählte Datei.

TabVifm
:	Öffnet einen neuen Tab und darin die ausgewählte Datei.

DiffVifm
:	Vergleicht die aktuelle Datei mit der ausgewählten.


### vifm

Noch ein paar Zeilen zu vifm. \
Vifm ist eine Dateiverwaltung für die Konsole die sich wie `vi` bedienen lässt.

Mit den Tasten `j` und `k` kann man die Auswahl nach oben bzw. unten bewegen.
Die Tasten `h` und `l` sind für ein Verzeichnis höher bzw. ein Verzeichnis tiefer oder
wenn es sich um eine Datei handelt für die Auswahl zuständig.

Mit der Tab Taste kann man zwischen den Fenster wechseln und mit `zo` bekommt
man die dot.Dateien zu sehen. `zm` lässt diese wieder verschwinden.

Mit `v` kann man mehrere Einträge markieren.

Mit `dd` werden Dateien ausgeschnitten oder mit `yy` kopiert und mit `d`
wieder eingebaut.



Eine Übersicht der aller Tasten bekommt man mit `:help`.



### gvim und vifm.vim

Mit gvim funktioniert, zumindest bei mir, vifm.vim nicht so gut.
Nach dem Start wird beim Navigieren der Bildschirm nicht sauber aufgebaut.
Abhilfe schafft der Befehl `:sp` oder `:on` so dass der Bildschirm neu 
eingeteilt wird.
Man kann damit leben ist aber eine UnSchönheit.

Eine andere Möglichkeit Dateien einfach auszuwählen
ist das FuzzyFinder Plugin.
Das Plugin kann man mit dem Befehl

	wget -O /tmp/vim-fuzzyfinder.zip http://www.vim.org/scripts/download_script.php?src_id=10588

holen und anschließend installieren.
Um den FuzzyFinder Befehl `FuzzyFinderFile` Befehl an eine Tasten zu binden
kann man sich nachfolgende Zeile in die `.vimrc` Datei einbauen.

	map <F12> :FuzzyFinderFile <CR>

















<!-- vim: set ft=pandoc: -->
